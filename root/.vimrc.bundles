" Plugin config
"
set rtp+=/opt/vim/bundle/Vundle.vim
call vundle#begin('/opt/vim/bundle')

Plugin 'VundleVim/Vundle.vim'

" Plugin 'https://github.com/Valloric/YouCompleteMe'
" Plugin 'https://github.com/w0rp/ale.git'
" Plugin 'https://github.com/fatih/vim-go.git'
" Plugin 'https://github.com/SirVer/ultisnips'
" Plugin 'https://github.com/honza/vim-snippets'

Plugin 'https://github.com/scrooloose/nerdtree.git'
Plugin 'https://github.com/kien/ctrlp.vim.git'
Plugin 'https://github.com/easymotion/vim-easymotion.git'
Plugin 'https://github.com/rking/ag.vim.git'

Plugin 'https://github.com/vim-airline/vim-airline'
Plugin 'https://github.com/vim-airline/vim-airline-themes'
Plugin 'https://github.com/altercation/vim-colors-solarized.git'
Plugin 'https://github.com/sickill/vim-monokai'
Plugin 'https://github.com/scrooloose/nerdcommenter'
"Plugin 'https://github.com/bronson/vim-trailing-whitespace.git'

call vundle#end()

" Set colorscheme by env
if $VSCODE_GIT_IPC_HANDLE != ""
    " VSCODE Terminal
    set background=dark
    colorscheme monokai
    hi vertsplit ctermfg=fg ctermbg=bg
    hi SignColumn ctermfg=fg ctermbg=bg
elseif $SHELL_OS == "LC_DARWIN"
    " Mac Iterm Terminal
    set background=dark
    colorscheme solarized
    hi vertsplit ctermfg=fg ctermbg=bg
    hi SignColumn ctermfg=fg ctermbg=bg
endif

nnoremap <leader>jd :YcmCompleter GoToDefinitionElseDeclaration<CR>
"let g:ycm_add_preview_to_completeopt = 1
"let g:ycm_autoclose_preview_window_after_completion = 1
"let g:ycm_autoclose_preview_window_after_insertion = 1

map <leader>n :NERDTreeToggle<CR>
map <leader>p :CtrlP<CR>
map <leader>f :CtrlPMRU<CR>

let g:airline#extensions#ale#enabled = 1

let g:ale_fix_on_save = 1
let g:ale_fixers = {
\   'python': ['autopep8'],
\}

let g:ale_linters = {
\   'python': ['flake8'],
\}

let g:ale_lint_on_text_changed = 'never'
let g:ale_lint_on_enter = 1

let g:go_fmt_command = 'goimports'
let g:go_fmt_fail_silently = 1
set completeopt-=preview

let g:EasyMotion_smartcase = 1
map <Leader><leader>h <Plug>(easymotion-linebackward)
map <Leader><Leader>j <Plug>(easymotion-j)
map <Leader><Leader>k <Plug>(easymotion-k)
map <Leader><leader>l <Plug>(easymotion-lineforward)
" 重复上一次操作, 类似repeat插件, 很强大
map <Leader><leader>. <Plug>(easymotion-repeat)

let g:airline_theme='solarized'
let g:airline_solarized_bg='dark'

let NERDTreeRespectWildIgnore=1

let g:ycm_key_invoke_completion = '<C-o>'
