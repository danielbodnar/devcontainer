{
    "ipdb": {
        "prefix": "ipdb",
        "body": "import ipdb\nipdb.set_trace()",
        "description": "Code snippet for ipdb debug"
    },
    "ipdb-pdb": {
        "prefix": "pdb",
        "body": "import ipdb\nipdb.set_trace()",
        "description": "Code snippet for ipdb debug"
    },
    "auth": {
        "prefix": "auth",
        "body": "# -*- coding: utf-8 -*-",
        "description": "coding"
    },
    "auth_ifo": {
        "prefix": "auth_ifo",
        "body": "# -*- coding: utf-8 -*-\n# Copyright 2018 IFOOTH\n# Author: Joe Lei <thezero12@hotmail.com>",
        "description": "IFOOTH coding"
    },
    "auth_ten": {
        "prefix": "auth_ten",
        "body": "# -*- coding: utf-8 -*-\n# Copyright 2018 Tencent\n# Author: Joe Lei <joelei@tencent.com>",
        "description": "Tencent coding"
    },
    "logger": {
        "prefix": "logger",
        "body": "import logging\nlogger = logging.getLogger(__name__)",
        "description": "Code snippet for logger"
    },
    "base_dir": {
        "prefix": "base_dir",
        "body": "import os.path\nBASE_DIR = os.path.dirname(os.path.abspath(__file__))",
        "description": "Base Dir for file"
    },
    "strftime": {
        "prefix": "strftime",
        "body": "strftime(\"%Y-%m-%d %H:%M:%S\")",
        "description": "date.strftime(format)"
    },
    "setup_logging": {
        "prefix": "setup_logging",
        "body": [
            "def _setup_logging(verbose=None, filename=None):",
            "    \"\"\"设置日志级别",
            "    \"\"\"",
            "    LOG_FORMAT = '[%(asctime)s] %(levelname)s %(name)s: %(message)s'",
            "    if verbose:",
            "        level = logging.DEBUG",
            "    else:",
            "        level = logging.INFO",
            "    logging.basicConfig(format=LOG_FORMAT, level=level, filename=filename)"
        ],
        "description": "Setup basic logging"
    },
    "slz": {
        "prefix": "slz",
        "body": [
            "serializer = serializers${0}(data=request.data)",
            "serializer.is_valid(raise_exception=True)",
            "data = serializer.data"
        ],
        "description": "serializer"
    },
    "httplog": {
        "prefix": "httplog",
        "body": [
            "import httplog",
            "httplog.monkey_patch()"
        ]
    }
}